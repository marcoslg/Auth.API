# Build PR
# Version 1.0.0

trigger: none

pool: 'Default'
workspace:
  clean: all

strategy:
  maxParallel: 2
  matrix: 
    debug:
      buildConfiguration: debug
    release:
      buildConfiguration: release

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'

steps:
# Nuget Installer
- task: NuGetToolInstaller@1
  displayName: 'Nuget Installer'
  inputs:
    versionSpec: 5.x

# Nuget Restore
- task: NuGetCommand@2
  displayName: 'Nuget Restore'
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: config
    nugetConfigPath: nuget.config

# Build solution
- task: VSBuild@1
  displayName: 'MSBuild'
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    clean: true
    maximumCpuCount: true

- task: DotNetCoreCLI@2
  displayName: 'Generate code coverage'
  inputs:
    command: test    
    projects: |
     **\*UnitTest*.csproj
     **\*.UT.csproj
     **\*.IT.csproj
    arguments: '-c $(BuildConfiguration) /p:CollectCoverage=True /p:CoverletOutputFormat=opencover,cobertura /p:CoverletOutput=$(Build.SourcesDirectory)\reports\coverlet' 
    nobuild: true
    publishTestResults: --logger trx --results-directory $(Build.SourcesDirectory)/TestResults


- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install dotnet-reportgenerator-globaltool --tool-path . --ignore-failed-sources
  displayName: Install ReportGenerator tool
  
- script: 'reportgenerator -reports:$(Build.SourcesDirectory)\reports\coverlet\coverage.opencover.xml -targetdir:$(Build.SourcesDirectory)\reports\coverlet -reporttypes:HtmlInline_AzurePipelines;Cobertura;Badges'
  displayName: Create reports

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)\reports\coverlet\coverage.cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)\reports\coverlet

    

#- task: PublishCodeCoverageResults@1
#  displayName: 'Publish code coverage'
#  inputs:
#    codeCoverageTool: Cobertura
#    summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml
#    additionalCodeCoverageFiles: $(Build.SourcesDirectory)/**/TestResults/**/*.coverage
